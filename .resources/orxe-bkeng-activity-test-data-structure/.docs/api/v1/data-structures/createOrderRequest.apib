
## createOrderRequest
+ include sessionIdOrderReq
+ include cartIdOrderReq 
+ include purchaseIdOrderReq
+ include searchTypeOrderReq
+ include searchRequestOrderReq 
+ include activityOrderReq 
+ include bookingInfoOrderReq 
+ include paymentMethodsOrderReq
+ include confirmationDetailsOrderReq 
+ include cancellationDetailsOrderReq
+ include reportingFieldOrderReq 
+ include customerOrderReq

## sessionIdOrderReq 
+ sessionId: `0f8fad5b-d9cb-461f-a165-70867728951z` (string) - Unique acknowledgement token that indicates that the request has been received and the processing has been initiated. Note: As an ORXe API consumer, you must use the same `sessionId` that is passed at the time of booking (search to book). The session ID is valid for 60 minutes from the time it is generated. 

## cartIdOrderReq
+ cartId: `0f8fad5b-d9cb-461f-a165-70867728951z` (string) -  Unique ID for the cart that contains the item (activity option) that the customer wants to book. Note: If you do not provide this field, then the `cartId` field is not returned in the API response.

## purchaseIdOrderReq
+ purchaseId: `0fad5b-d9cb-461f-a165-70861z` (string) - Purchase ID used to retrieve the details of the item purchased by the customer. Note: If you do not provide this field, then the `purchaseId` field is not returned in the API response.

## searchTypeOrderReq
+ detailsSearchType: `Stateful` (enum) - Type of activity search. Depending on the type of search, the `searchQuery` object specified is different. Note: If you do not provide this field, then the `detailsSearchType` field is not returned in the API response. 
  + Stateful 
  + Stateless 

## searchRequestOrderReq
+ searchRequest (searchRequestInfoOrderReq, required) - Contains information about the search criteria that were provided in the Initiate Activity Search or the Initiate a Stand-Alone Activity Search  API request at time of search.


## searchRequestInfoOrderReq
+ include currencyOrderReq 
+ include searchQueryOrderReq 
+ include customerInfoOrderReq 
+ include programIdOrderReq 

## currencyOrderReq
+ currency: `USD` (string) - 3-character ISO code that indicates the currency that was specified in the search request.  
Note: If you do not provide this field, the `currency` field is not returned in the API response.

## searchQueryOrderReq
+ searchQuery (searchQueryStatelessOrderReq) - Contains the list of search criteria that is used to search for activities. The `searchQuery` object contains the information about the geo region, the date range within which the customer wants to search for activities, passenger details, and the activity date. 
Notes: 
  + If specified at the time of order creation, the `searchQuery` object provided can be different depending on the type of search performed. For better understanding, see the JSON samples for the following search use cases: statefulorderreq and statelessorderreq.
  + If you do not provide this field, then the `searchQuery` object is not returned in the API response.


## searchQueryStatelessOrderReq
+ passengerDetails (array [passengerDetailsOrderReq], fixed-type) - Contains the list of information about the travelers based on which you want to retrieve the list of activity options. Note: If you do not provide this field, then the `passengerDetails` array is not returned in the API response.
+ dateRange (dateRangeInfoOrderReq) - Contains the range of date between which the customer wants to search for activities. Note: If you do not provide this field, then the `dateRange` object is not returned in the API response. 
+ activityDate: `{dateTime|YYYY-MM-DDTHH:mm:ss|30 0}` (string) - Date that the traveler wants book the activity for. Note: If you do not provide this field, then the `activityDate` field is set to `0001-01-01T00:00:00`. Format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS
+ activityId: `59521P1` (string) - Unique activity ID that identifies a specific activity for which you want to retrieve the activity details. You must specify the `activityId` in case of stateless activity search. Note: If you do not provide this field, then the `activityId` field is not returned in the API response.  
+ filters (filterOrderReq) - Contains filters to narrow down the activity search results. 
Notes: 
  + This field is applicable only in case of stateful activity search. 
  + If you do not provide this field in case of stateful activity search, then the `filters` object is not returned in the API response.
+ bounds (boundsInfoOrderReq) -  Contains information about the geo region where the customer wants to search for activites. 
Notes: 
  + This field is applicable only in case of stateful activity search. 
  + If you do not provide this field in case of stateful activity search, then the `bounds` object is not returned in the API response.

## passengerDetailsOrderReq
+ count: 1 (number) - Number of travelers of a specific `type`. Note: If you do not provide this field, then the `count` field value is set to `0`.
+ ages :`20` (array [number], fixed-type) - Age of travelers of a specific `type`. For example, if the `count` field value is set to `2` for traveler type `Adult`, then you must provide the age of two adult travelers in the `ages` array. Note: If you do not provide this field, then the `ages` array is not returned in the API response.
+ type: `Adult` (enum) - Type of traveler. Note: If you do not provide this field, then the `type` field is not returned in the API response. 
    + Adult 
    + Child
    + Infant
    + Senior 
    + Youth
    + Unknown

## dateRangeInfoOrderReq
+ from: `{date|YYYY-MM-DD|30}` (string) - Start date from when the customer wants to search for activities. Note: If you do not provide this field, then the `from` field is set to `0001-01-01T00:00:00`. Format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS
+ to: `{date|YYYY-MM-DD|30}` (string) - End date up to when the customer wants to search for the activity. Note: If you do not provide this field, then the `to` field is set to `0001-01-01T00:00:00`. Format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS

## boundsInfoOrderReq
+ circle (centerInfoOrderReq) - Contains the geographic coordinates of the center point and the radius within which you want to search for activities. Note: If you do not provide this field, then the `circle` object is not returned in the API response.

## centerInfoOrderReq
+ center (object) - Contains the latitude and longitude coordinates of the given point from which the radius is calculated to determine the area to search for activities. For example, if you want to search for activities within a 60.5 km radius from the Santa Monica Pier, the Santa Monica Pier is considered as your center. Note: If you do not provide this field, then the `center` object is not returned in the API response.
    + lat: `34.0103` (number) - Latitude coordinate of the center point. The `lat` value must be between -90 and +90. For example, the `lat` value for Santa Monica Pier is 34.0103. Note: If you do not provide this field, then the `lat` field value is set to `0`. Format: Decimal  
    + long: `-118.4963` (number) - Longitude coordinate of the center point. The `long` value must be between -180 and +180.  For example, the `long` value for Santa Monica Pier is -118.4963. Note: If you do not provide this field, then the `long` field value is set to `0`. Format: Decimal
+ radiusKm: `60.5` (number) - Distance, in kilometers, from the center point that you want to consider in the search area. The `radiusKm` value must be between `1` and `100`. For example, if you want to search within a 60.5-km radius from the Santa Monica Pier, then set the `radiusKm` field to 60.5. Note: If you do not provide this field, then the `radiusKm` field value is set to `0`. Format: Decimal

## filterOrderReq
+ include activityNameFilterOrderReq
+ include priceFilterOrderReq
+ include categoryFilterOrderReq
+ include tripAdvRatingFilterOrderReq
+ include allowedCountryOrderReq

## activityNameFilterOrderReq
+ activityNames: `Virtual Guided Cultural Tour of Los Angeles`, `Gambling Built the Sunset Strip Walking Audio Tour by VoiceMap`, `Crazy Dash Walking Adventure of Ontario, CA`, `Wacky Walk Adventure Game - Anaheim, CA`, `Operation City Quest Scavenger Hunt - Los Angeles, CA` (array) - Include only those activities whose activity name is same as specified in this field.

## priceFilterOrderReq
+ price (priceFilterInfoOrderReq) - Include only those activities whose rate is equal to or higher than the rate specified in the `minPrice` field and equal to or less than the rate specified in the `maxPrice` field. The `price` filter allows users to see only those activities that are within the specified price range.

## priceFilterInfoOrderReq
+ minPrice: 20.00 (number) - Include only those activities whose rate is equal to or higher than the rate specified in this field. Format: Decimal
+ maxPrice: 1000.00 (number) - Include only those activities whose  rate is equal to or lower than the rate specified in this field. Format: Decimal

## categoryFilterOrderReq
+ categories: `9`, `12`, `16`, `4` (array) - Include only those activities that belong to the categories specified in this field.  You must provide the IDs of the categories that are supported by the `categories` filter.  

## tripAdvRatingFilterOrderReq
+ tripAdvisorRating: `1`,`2`, `3`, `4`, `5` (array) - Include only those activities whose TripAdvisor&reg; rating is equal to the TripAdvisor&reg; rating specified in this field. 

## allowedCountryOrderReq
+ allowedCountry: `US` (string) - Include only those activities that belong to the country character ISO country code specified in this field. This filter is used when the specified radial search region spreads across different countries and you want to restrict the results to only one specific country. Consider a scenario where the georegion provided in the search criteria is located close to a country's borderline and the radius spans two countries, such as `France` and `Belgium`. In this scenario, if you want to restrict the results to `France`, you must set the `allowedCountry` field value to `FR`.

## customerInfoOrderReq
+ customerInfo (customerDetailsOrderReq) - Contains information about the customer and the eligibility information of the customer for the loyalty program that the customer is associated with. Note: If you do not provide this field, then the `customerInfo` field is not returned in the API response. 

## customerDetailsOrderReq
+ include customerIdOrderReq
+ include pointBalanceOrderReq
+ include transitCodeOrderReq
+ include eligibilityInfoOrderReq

## customerIdOrderReq
+ id: `autoUser` (string) -  Unique ID for the customer. Note: If you do not provide this field, then the `id` field is not returned in the API response. 

## pointBalanceOrderReq
+ availablePointBalance: `90000.0` (number) - Number of loyalty points available in the customer's credit card account. Note: If you do not provide this field, then the `availablePointBalance` field value is set to `0`. Format: Decimal

## transitCodeOrderReq 
+ transitCode: `72e87c86-c240-45eb-8d96-b46c52e5618f` (string) - Unique code that is generated by the transit service. The transit code is used to track all the calls made to different systems within cxLoyalty for all search to booking-related transactions for a single user session. The transit code is valid for `72 hours` from the time it is generated. Note: If you do not provide this field, then the `transitCode` field is not returned in the API response. 

## eligibilityInfoOrderReq
+ eligibilityInfo (eligibilityOrderReq) - For internal use only.

## eligibilityOrderReq
+ programCurrency: `Points` (string) - For internal use only.
+ purchaseAllowed: true (boolean) - For internal use only.
+ redemptionAllowed: true (boolean) - For internal use only.
+ displayProgramCurrencyAsDecimal: false (boolean) - For internal use only.
+ useVariableMilesFormula: false (boolean) - For internal use only.
+ shortfallAllowed: true (boolean) - For internal use only.

## programIdOrderReq
+ programId: `docs` (string) - Unique ID for the loyalty program. Each loyalty program can be associated with various rewards. The `programId` is used to retrieve all the rewards mapped to it. Note: If you do not provide this field, the `programId` field is not returned in the API response.

## activityOrderReq
+ activity (activityInfoOrderReq, required) - Contains information about the  activity, along with its content attributes, such as activity name, images, policies, reviews, and rating. 
Note: If you provide the `activity` object, then you must provide the activity name and the activity option in the request.

## activityInfoOrderReq
+ include activityIdOrderReq
+ include supplierIdOrderReq
+ include supplierAccountIdOrderReq
+ include activityNameOrderReq
+ include activityCategoryOrderReq
+ include activityContentOrderReq
+ include voucherDetailsOrderReq 
+ include policiesDetailsOrderReq
+ include bookingRequirementsOrderReq
+ include activityOptionOrderReq

## activityIdOrderReq
+ id: `59521P1` (string) - Unique activity ID that identifies a specific activity. Note: If you do not provide this field, then the `id` field is not returned in the API response.

## supplierIdOrderReq
+ supplierId: `3awhj4i7z7k` (string) - Unique ID for the supplier of this activity. Note: If you do not provide this field, then the `supplierId` field is not returned in the API response.  

## supplierAccountIdOrderReq
+ supplierAccountId: `36br8t9byf4` (string) - Unique account ID for the supplier of this activity. Note: If you do not provide this field, then the `supplierAccountId` field is not returned in the API response. 

## activityNameOrderReq
+ name: `Anaheim Resort Area Multi-Day Transportation Tickets` (string, required) - Name of the activity.

## activityCategoryOrderReq
+ categories (array [categoryOrderReq], fixed-type) - Contains the list of categories to which the activity belongs.   Note: If you do not provide this field, then the `categories` array is not returned in the API response.

## categoryOrderReq
+ id: `20` (string) - Unqiue ID for the category. Note: If you do not provide this field, then the `id` field is not returned in the API response. 
+ name: `Multi-day & Extended Tours` (string) - Name of the category. Note: If you do not provide this field, then the `name` field is not returned in the API response. 

## activityContentOrderReq
+ content (contentOrderReq) - Contains information about the activity, including its content attributes, such as the activity summary, rating, location, reviews, images, and policies. Note: If you do not provide this field, then the `content` object is not returned in the API response.

## contentOrderReq
+ include mediaOrderReq 
+ include locationOrderReq
+ include summaryOrderReq
+ include activityDescOrderReq
+ include durationOrderReq 
+ include scheduleOrderReq
+ include notesOrderReq 
+ include inclusionsOrderReq 
+ include exclusionsOrderReq
+ include displayInfoOrderReq
+ include vouchersOrderReq
+ include policiesOrderReq
+ include reviewsOrderReq
+ include reviewCountOrderReq
+ include ratingOrderReq
+ include maxPassengerCountOrderReq
+ include offersOrderReq

## mediaOrderReq 
+ media (mediaInfoOrderReq) - Contains the media information related to the activity, such as primary image, images, thumbnails, and captions. Note: If you do not provide this field, then the `media` object is not returned in the API response. 

## mediaInfoOrderReq
+ primaryImage (primaryImageOrderReq) - Contains information about the primary image for the activity. Note: If you do not provide this field, then the `primaryImage` object is not returned in the API response.  
+ images (array [imagesOrderReq], fixed-type) - Contains the list of full-size images for the activity. Note: If you do not provide this field, then the `images` array is not returned in the API response.  

## primaryImageOrderReq
+ url: `https://hare-media-cdn.tripadvisor.com/media/attractions-splice-spp-674x446/06/71/c3/b5.jpg` (string) - The content delivery network (CDN) URL for the full-size image. Note: If you do not provide this field, then the `url` field is not returned in the API response. 
+ thumbnailUrl: `https://hare-media-cdn.tripadvisor.com/media/attractions-splice-spp-154x109/06/71/c3/b5.jpg` (string) - The content delivery network (CDN) URL for the thumbnail image. Note: If you do not provide this field, then the `thumbnailUrl` field is not returned in the API response. 
+ caption: `Anaheim Resort Area Multi-Day Transportation Tickets` (string) - Description of the full-size image. The caption can be used to display text alongside the image or to display text while the image is loading. Note: If you do not provide this field, then the `caption` field is not returned in the API response. 

## imagesOrderReq
+ url: `https://hare-media-cdn.tripadvisor.com/media/attractions-splice-spp-674x446/06/71/c3/b5.jpg` (string) -  The content delivery network (CDN) URL for the full-size image. Note: If you do not provide this field, then the `url` field is not returned in the API response. 
+ thumbnailUrl: `https://hare-media-cdn.tripadvisor.com/media/attractions-splice-spp-154x109/06/71/c3/b5.jpg` (string) - The content delivery network (CDN) URL for the thumbnail image. Note: If you do not provide this field, then the `thumbnailUrl` field is not returned in the API response. 
+ caption: `Anaheim Resort Area Multi-Day Transportation Tickets` (string) - Description of the full-size image. The caption can be used to display text alongside the image or to display text while the image is loading. Note: If you do not provide this field, then the `caption` field is not returned in the API response. 

## locationOrderReq
+ location (locationInfoOrderReq) - Contains the location of the activity. Note: If you do not provide this field, then the `location` object is not returned in the API response.  

## locationInfoOrderReq 
+ include geoCodeLocationOrderReq
+ include addressActivityOrderReq
+ include departureInfoOrderReq
+ include returnInfoOrderReq

## geoCodeLocationOrderReq
+ geoCode (geoCodeInfoOrderReq) - Contains the geographic coordinates of the activity location. Note: If you do not provide this field, then the `geoCode` object is not returned in the API response.  

## geoCodeInfoOrderReq
+ lat: 33.859013 (number) - Latitude coordinate of the activity location. Note: If you do not provide this field, then the `lat` field value is set to `0`. 
+ long: `-117.9778750001` (number) - Longitude coordinate of the activity location. Note: If you do not provide this field, then the `long` field value is set to `0`.

## addressActivityOrderReq
+ address (addressActivityInfoOrderReq) - Contains information about the address of the location where the activity is conducted. Note: If you do not provide this field, then the `address` object is not returned in the API response. 

## addressActivityInfoOrderReq
+ line1: `3077 ACME Street` (string) - Street number and street name.
+ line2: `Landmark: Beside the ACME Shopping Mall` (string) - Additional information related to the address, such as landmark, apartment, suite, unit, and building information. 
+ include cityOrderReq
+ include stateOrderReq
+ include countryCodeOrderReq
+ postalCode: `94133` (string) - Postal code. In various countries, postal code is also known as postcode, post code, Eircode, PIN Code, or ZIP Code.

## departureInfoOrderReq
+ departurePoint (departureDetailsOrderReq) - Contains information about the departure location, where the customer must reach to board the transport for the activity. Note: If you do not provide this field, then the `departurePoint` object is not returned in the API response.  

## departureDetailsOrderReq
+ desc: `Multiple locations around the Anaheim Resort Area.` (string) - Description of the departure location. 
+ departureTime: `Buses operate from 1 hour prior to \n Disneyland ® Park opening to 30 mins after Park closing` (string) - Contains details about the departure time, along with the mode of transport for the duration of the activity.

## returnInfoOrderReq
+ returnPoint (returnDetailsOrderReq) - Contains information about the return location, where the customer is dropped off at the end of the activity. Note: If you do not provide this field, then the `returnPoint` object is not returned in the API response.  

## returnDetailsOrderReq
+ desc: `Multiple locations around the Anaheim Resort Area.` (string) - Description of the return location, where the customer is dropped off at the end of the activity. 
+ returnTime: `Buses operate from 1 hour after the \n Disneyland ® Park opening to 30 mins prior to Park closing` (string) - Contains details about the return time, along with the mode of transport for the duration of the activity.

## cityOrderReq
+ city (cityInfoOrderReq) - Contains information about the city.

## cityInfoOrderReq
+ code: `ANA` (string) - 3-character city code.
+ name: `Anaheim Buena Park` (string) - Name of the city.

## stateOrderReq
+ state (stateInfoOrderReq) - Contains information about the state. 

## stateInfoOrderReq
+ name: `California` (string) - Name of the state.
+ code: `CA` (string) - 2-character state code. 

## countryCodeOrderReq
+ countryCode: `US` (string) - 2-character ISO code of the country.  

## summaryOrderReq
+ summary: `Enjoy all the theme parks, hotels, restaurants, shopping, dining and other destinations within the Anaheim Resort area with this multi-day transportation ticket. Whether you want to go to the theme parks, do some shopping or sample some local cuisine you will be able to get there quickly and efficiently by eco-friendly bus! The routes include the cities of Anaheim, Garden Grove, Buena Park, Costa Mesa, Santa Ana and Orange and the tickets can be delivered to your hotel.` (string) - Description of the activity. Note: If you do not provide this field, then the `summary` field is not returned in the API response. 

## activityDescOrderReq
+ desc: `These 1, 3 or 5-day tickets give you access to an hop-on, hop-off service with comfortable, eco-friendly buses that run on 22 scheduled routes in Anaheim and Orange County. All of the routes begin and end at the Disneyland® Resort Transportation Center, and serve over 60 hotels and dozens of popular destinations for dining, shopping, and playing!Service operates 7 days a week and typically begins one hour before the Disneyland® Resort opens, continuing through 30 minutes after close. Travelers can also plan their trips on-the-go with the mobile phone. Once in destination, it is possible to download a handy app to ensure they have all the information they need at hand.Tickets will be conveniently delivered to your hotel, so please be sure to enter the hotel info during the booking process. Then once in Anaheim, simply find the appropriate line, make your way to the closest stop to board the bus and begin your Anaheim vacation!Below is a sample of places you will be able to visit using these tickets: • Anaheim Brewery  • Anaheim Garden Walk  • Anaheim Packing District  • Angel Stadium  • Bowers Museum  • Discovery Cube  • Disneyland® Resort  • Downtown Anaheim  • Honda Center  • Knott's Berry Farm  • MainPlace Mall  • Medieval Times  • Pirates Dinner Adventure  • South Coast Plaza` (string) - Description about the activity. Note: If you do not provide this field, then the `desc` field is not returned in the API response.

## durationOrderReq 
+ duration: `5 days` (string) - Duration of the activity. Note: If you do not provide this field, then the `duration` field is not returned in the API response. 

## scheduleOrderReq
+ schedule (scheduleResultsOrderReq) - Contains the schedule for the activity. The type of schedule may vary per activity and per supplier. The schedule of an activity is specified in a free text format, which includes the timing and the activity frequency. Note: If you do not provide this field, then the `schedule` object is not returned in the API response. 

## scheduleResultsOrderReq
+ freeText (array [freeTextOrderReq], fixed-type) - Contains the schedule of the activity in free text format. Note: If you do not provide this field, then the `freeText` array is not returned in the API response.  

## freeTextOrderReq
+ timing: `Valid from the time of first use, for the consecutive days selected.` (string) - Contains the activity timing. Note: If you do not provide this field, then the `timing` field is not returned in the API response.  
+ frequency: `See Availability` (string) - Contains the frequency of the activity. Note: If you do not provide this field, then the `frequency` field is not returned in the API response.  

## notesOrderReq 
+ notes: `Confirmation will be received at time of booking` (array) - Contains additional notes or important information related to the activity. Note: If you do not provide this field, then the `notes` array is returned as an empty array in the API response.

## inclusionsOrderReq 
+ inclusions: `Transportation for the number of selected days`, `All taxes, fees and handling charges` (array) - Contains a list of services that are included in the activity. Note: If you do not provide this field, then the `inclusions` array is returned as an empty array in the API response.

## exclusionsOrderReq
+ exclusions: `Hotel pickup and drop-off` (array) - Contains a list of services that are excluded from the activity. Note: If you do not provide this field, then the `exclusions` array is returned as an empty array in the API response.

## displayInfoOrderReq
+ displayInfos (array [displayOrderReq], fixed-type) - Contains the list of display information for the activity, which can be used for display or advertisement purpose on the User Interface (UI). Note: If you do not provide this field, then the `displayInfos` array is returned as an empty array in the API response.

## displayOrderReq
+ title: `Highlights` (string) - Title for the display information. 
+ desc: `Family friendly. Multiple departure times and locations available. Flexibility to customize your itinerary to your own preferences.` (string) - Display text. 

## vouchersOrderReq
+ voucher (voucherInfoOrderReq) - Contains information about the voucher that is provided for the activity. Note: If you do not provide this field, then the `voucher` object is not returned in the API response. 

## voucherInfoOrderReq
+ type: `Evoucher` (enum) - Type of voucher. Note: If you do not provide this field, then the `type` field is not returned in the API response.  
    + Evoucher 
    + IdOnly
    + PaperOnly
+ desc: `You can present either a paper or an electronic voucher for this activity.` (string) - Description of the voucher. Note: If you do not provide this field, then the `desc` field is not returned in the API response. 

## policiesOrderReq
+ policies (array [policiesInfoOrderReq], fixed-type) - Contains the list of information about the applicable policies for the activity. Note: If you do not provide this field, then the `policies` array is not returned in the API response. 

## policiesInfoOrderReq
+ type: `General` (string) - Type of policy. Note: If you do not provide this field, then the `type` field is not returned in the API response.  
+ desc: `For a full refund, cancel at least 24 hours in advance of the start date of the experience.` (string) - Textual description of the policy. Note: If you do not provide this field, then the `desc` field is not returned in the API response.  

## reviewsOrderReq
+ reviews (array[reviewInfoOrderReq], fixed-type) - Contains the list of reviews, given by other customers, for the activity. Note: If you do not provide this field, then the `reviews` array is returned as an empty array in the API response.

## reviewInfoOrderReq
+ desc: `It was an amazing experience with exceptional travel arrangements.` (string) - Description of the review. Note: If you do not provide this field, then the `desc` field is not returned in the API response. 
+ rating: 5.0 (number) - Rating (1-5) for the activity, as provided by the reviewer. Note: If you do not provide this field, then the `rating` field value is set to `0`. Format: Decimal
+ date: `2018-12-08T10:20` (string) - Date when the review was submitted. Note: If you do not provide this field, then the `date` field is set to `0001-01-01T00:00:00`. Format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS
+ userInfo: `John Doe` (string) - Name of the reviewer. Note: If you do not provide this field, then the `userInfo` field is not returned in the API response. 
+ language: `en` (string) - Language in which the review was submitted. Note: If you do not provide this field, then the `language` field is not returned in the API response.   
+ title: `Mr` (enum) - Title before the name. Note: If you do not provide this field, then the `title` field is not returned in the API response.  
  + Mr
  + Madam
  + Master
  + Miss
  + Mrs
  + Ms
  + Mx

## reviewCountOrderReq
+ reviewCount: 25 (number) - Number of reviews provided for the activity. Note: If you do not provide this field, then the `reviewCount` field value is set to `0` 

## ratingOrderReq
+ rating: 4.5 (number) - Overall rating (1-5) for the activity.  Note: If you do not provide this field, then the `rating` field value is set to `0`. Format: Decimal

## maxPassengerCountOrderReq
+ maxPassengerCount: 3  (number) - Indicates the maximum number of travelers allowed to participate in this activity. Note: If you do not provide this field, then the `maxPassengerCount` field value is set to `0`. Format: Decimal 

## offersOrderReq
+ offers (array[offerInfoOrderReq], fixed-type) - Contains details about supplier-specific promotional offers. Note: If you do not provide this field, then the `offers` array is returned as an empty array in the API response.

## offerInfoOrderReq
+ format: `Text` (enum) - Indicates the format in which the offer is provided by the supplier. Note: If you do not provide this field, then the `format` field is set to `Structured`.
    + Structured
    + Text   
+ desc: `10% off Tours & Activities` (string) - Description of the promotional offer. Note: If you do not provide this field, then the `desc` field is not returned in the API response.    


## voucherDetailsOrderReq 
+ voucher (voucherInfoOrderReq) - Contains information about the voucher that is provided for the activity. Note: If you do not provide this field, then the `voucher` object is not returned in the API response. 

## policiesDetailsOrderReq
+ policies (array [policiesInfoOrderReq], fixed-type) - Contains the list of information about the applicable policies for the activity. Note: If you do not provide this field, then the `policies` array is not returned in the API response. 

## bookingRequirementsOrderReq
+ bookingRequirements (ReqInfoOrderReq) - Contains information about the booking requirements, such as the booking questions that the customer must answer at the time of booking and the list of credit cards that can be used to pay for the booking. Note: If you do not provide this field, then the `bookingRequirements` object is not returned in the API response. 

## ReqInfoOrderReq
+ include bookingQuestionsOrderReq
+ include allPaxRequiredOrderReq
+ include allowedCreditCardsOrderReq

## bookingQuestionsOrderReq
+ bookingQuestions (array[questionInfoOrderReq], fixed-type) - Contains the list of questions that is displayed to the customer at the time of booking. Note: If you do not provide this field, then the `bookingQuestions` array is returned as an empty array in the API response.

## questionInfoOrderReq
+ question: `Please pick me up at` (string) - Contains the question that is displayed to the customer on the User Interface (UI) at the time of booking. Note: If you do not provide this field, then the `question` field is not returned in the API response. 
+ sampleAnswer: `Holiday Inn Anaheim- Resort Area` (string)- Sample answer that is displayed, as a reference, on the User Interface (UI). Note: If you do not provide this field, then the `sampleAnswer` field is not returned in the API response.
+ id: `19` (number) - Unique ID that is assigned to the question. Note: If you do not provide this field, then the `id` field value is set to `0`.
+ isMandatory: true (boolean) - Indicates whether the question is mandatory for the customer at the time of booking. Note: If you do not provide this field, then the `mandatory` field is set to `false`. 
+ sortOrder: `1` (number) - Indicates the order index used for displaying the question. Note: If you do not provide this field, then the `sortOrder` field value is set to `0`.
+ questionCategory: `Pickup Location` (string) - Contains the category to which this question belongs. Note: If you do not provide this field, then the `questionCategory` field is not returned in the API response.

## allPaxRequiredOrderReq
+ allPaxRequired: true (boolean) -  If the `allPaxRequired` field returns `true`, then the information for all the travelers is required at the time of booking. Note: If you do not provide this field, then the `allPaxRequired` field is set to `false`. 

## allowedCreditCardsOrderReq
+ allowedCreditCards: `VI`, `MC`, `AX` (array) - Contains the list of credit card types that are accepted at the time of booking.   Note: If you do not provide this field, then the `allowedCreditCards` array is returned as an empty array in the API response.

## activityOptionOrderReq
+ option (optionOrderReq, required) - Contains information about the selected activity option, along with the details of the option, such as the option name, description, the fare for the activity option, available purchase options, and the applicable cancellation policy. 

## optionOrderReq
+ include optionIdOrderReq
+ include optionNameOrderReq
+ include optionDescOrderReq
+ include rateOrderReq
+ include cancellationPenaltiesOrderReq
+ include cancellationPolicyOptionsOrderReq
+ include isImmediateRefundNeededOrderReq 

## optionIdOrderReq
+ id: `TG1` - Unique ID for the option provided by the supplier. Note: If you do not provide this field, then the `id` field is not returned in the API response.

## optionNameOrderReq
+ name: `1-Day Ticket` - Name of the option. Note: If you do not provide this field, then the `name` field is not returned in the API response.

## optionDescOrderReq
+ desc: `1-Day Ticket` - Description of the option. Note: If you do not provide this field, then the `desc` field is not returned in the API response.

## rateOrderReq
+ rate (rateInfoOrderReq, required) - Contains information about the rate for the activity option, such as the rate ID, the fare (including fees, taxes, markup one, and discounts), and the available reward options.

## rateInfoOrderReq
+ include rateIdOrderReq
+ include fareTypeOrderReq
+ include isRefundableOrderReq
+ include currencyDSFareOrderReq
+ include displayFareOptionsOrderReq
+ include paxTypeFareDetailsOrderReq
+ include purchaseOptionsOrderReq

## rateIdOrderReq
+ id: `NjEwZWM2NDctYTA1Zi00M2JmLWI2MmMtNGE4ZTY4OGJhYTZlLUFDTlhUJDQ2M3w1OTUyMVAxfFRHMXxmZjkzNzhkNy0wMDNhLTQ0N2MtODJlMi1lYjMzYmU2MmJhM2Q=` (string) - Unique ID for the rate. Note: If you do not provide this field, then the `id` field is not returned in the API response. 

## fareTypeOrderReq
+ fareType: `Negotiated` (enum) - Indicates the type of fare.  Note: If you do not provide this field, then the `fareType` field is not returned in the API response.
  + published_type
  + negotiated_type

## isRefundableOrderReq
+ isRefundable: true (boolean) - Indicates whether the fare is refundable. Note: If you do not provide this field, then the `isRefundable` field is set to `false`.  

## currencyDSFareOrderReq
+ currency: `USD` (string) - 3-character ISO code that indicates the currency in which monetary amounts are returned in the response. The API calculates the amount equivalents and returns the amounts in the currency specified. For example, if the `currency` field value is set to `USD`, then the `baseFare`, `discount`, `taxes`, and other monetary amounts are returned in their `USD` amount equivalents. We support all ISO currencies Note: If you do not provide this field, then the `currency` field is not returned in the API response.

## displayFareOptionsOrderReq
+ displayFare (displayOpsOrderReq) - Contains information about the fare, along with the various breakup components that make up the fare for the activity. This fare is displayed to the customer on the User Interface (UI). Note: If you do not provide this field, then the `displayFare` object is not returned in the API response.

## displayOpsOrderReq
+ include totalFareOrderReq
+ include breakupFareOrderReq

## totalFareOrderReq
+ totalFare: `5.59` (number) - Contains the fare for the activity after considering the `breakup/baseFare`, `breakup/taxes`, `breakup/fees`, `breakup/discounts`, and `breakup/markups` amounts. Note: If you do not provide this field, then the `totalFare` field value is set to `0`. Format: Decimal

## breakupFareOrderReq
+ breakUp (breakupFareInfoOrderReq) - Contains information about various breakup components that make up the `displayFare/totalFare`. Note: If you do not provide this field, then the `breakUp` object is not returned in the API response.

## breakupFareInfoOrderReq
+ baseFare: `4.40` (number)- Contains the base fare for the activity. 
Notes:
  + The `baseFare` amount does not include the discount, taxes, fees, markup one, or any other additional cost.
  + If you do not provide this field, then the `baseFare` field value is set to `0`. Format: Decimal
+ include taxesOptionsOrderReq
+ include feesOptionsOrderReq
+ include discountsOptionsOrderReq
+ include markupsOptionsOrderReq

## taxesOptionsOrderReq
+ taxes (array [taxesInfoOrderReq], fixed-type) -  Contains the list of all the applicable taxes for the activity. This amount is not included in the `breakup/baseFare` field. However, this amount is already included in the `displayFare/totalFare` field. Note: If you do not provide this field, then the `taxes` array is returned as an empty array in the API response.

## taxesInfoOrderReq
+ amount: `0.0` (number) - Tax amount. Note: If you do not provide this field, then the `amount` field value is set to `0`. Format: Decimal
+ code: `LT` (string) - Unique code for the tax that is charged. Note: If you do not provide this field, then the `code` field is not returned in the API response.
+ desc: `Luxury tax` (string) - Description or additional information for the type of tax that is charged. Note: If you do not provide this field, then the `desc` field is not returned in the API response.

## feesOptionsOrderReq
+ fees (array [feesInfoOrderReq], fixed-type) - Contains the list of all the applicable fees for the activity. This amount is not included in the `breakup/baseFare` field. However, this amount is already included in the `displayFare/totalFare` field. Note: If you do not provide this field, then the `fees` array is returned as an empty array in the API response.

## feesInfoOrderReq
+ amount: `0` (number) - Fee amount. Note: If you do not provide this field, then the `amount` field value is set to `0`. Format: Decimal
+ desc: `Early check-in fee` (string) - Description or additional information for the type of fee that is charged. Note: If you do not provide this field, then the `desc` field is not returned in the API response.
+ source: `Supplier` (string) - Indicates whether the fee is charged by the supplier or the  Online Travel Agency (OTA system). Note: If you do not provide this field, then the `source` field is not returned in the API response.

## discountsOptionsOrderReq
+ discounts (array [discountsInfoOrderReq], fixed-type) - Contains the list of all the applicable discounts for the activity. This amount is not included in the `breakup/baseFare` field. However, this amount is already included in the `displayFare/totalFare` field. Note: If you do not provide this field, then the `discounts` array is returned as an empty array in the API response.

## discountsInfoOrderReq
+ amount: `0.0` (number) - Discount amount. Note: If you do not provide this field, then the `amount` field value is set to `0`. Format: Decimal 
+ desc: `Low season discount` (string) -  Description or additional information for the discount that is offered. Note: If you do not provide this field, then the `desc` field is not returned in the API response.
+ source: `supplier` (string) - Indicates whether the discount is provided by the supplier or the  Online Travel Agency (OTA system). Note: If you do not provide this field, then the `source` field is not returned in the API response.

## markupsOptionsOrderReq
+ markups (array [markupsInfoOrderReq], fixed-type) - Contains the list of applicable markup one for the fare. This amount is not included in the `breakup/baseFare` field. Note: If you do not provide this field, then the `markups` array is returned as an empty array in the API response.

## markupsInfoOrderReq
+ amount: `1.19` (number) - markup two (MUP) amount.  If you do not provide this field, then the `amount` field value is set to `0`. Format: Decimal
+ desc: `agency` (string) - Description or additional information for the markup three. Note: If you do not provide this field, then the `desc` field is not returned in the API response. 
+ source: `Agency` (string) - Indicates the source that has applied the markup three. Note: If you do not provide this field, then the `source` field is not returned in the API response. 

## paxTypeFareDetailsOrderReq
+ paxTypeFareDetails (array [paxTypeFareInfoOrderReq], required, fixed-type) - Contains the fare details and fare breakup of each traveler for whom this activity is booked. 

## paxTypeFareInfoOrderReq
+ type: `Adult` (enum, required) - Type of traveler. 
  + Adult
  + Child 
  + Infant 
  + Senior 
  + Youth
+ minQty: 1 (number, required) - Minimum number of travelers allowed to book the activity.  
+ maxQty: 9 (number, required) - Maximum number of travelers allowed to book the activity. 
+ pricingType: `Individual` (enum, required) - Indicates the type of pricing offered to the traveler for this activity. If the `pricingType` is `Indiviual`, it means that the fare for this activity is a per individual fare. If the `pricingType` is `Group`, it means that the fare for this activity is a group fare. 
  + Individual 
  + Group 
+ fare (paxTypeFareOrderReq, required) - Contains information about the fare, along with the various breakup components that make up the fare for the activity. 

## paxTypeFareOrderReq
+ currency: `USD` (string, required) -  3-character ISO code that indicates the currency in which monetary amounts are returned in the response. The API calculates the amount equivalents and returns the amounts in the currency specified. For example, if the `currency` field value is set to `USD`, then the `baseFare`, `discount`, `taxes`, and other monetary amounts are returned in their `USD` amount equivalents. We support all ISO currencies
+ totalFare: 2.72 (number, required) - Contains the fare for the activity after considering the `breakup/baseFare`, `breakup/taxes`, `breakup/fees`, `breakup/discounts`, and `breakup/markups` amounts. Format: Decimal
+ breakUp (breakupPaxTypeFareOrderReq, required) - Contains information about various breakup components that make up the `fare/totalFare`.

## breakupPaxTypeFareOrderReq
+ baseFare: `4.40` (number, required)- Contains the base fare for the activity. Note: The `baseFare` amount does not include the discount, taxes, fees, markup one, or any other additional cost. Format: Decimal
+ taxes (array [taxesInfoOrderReq], fixed-type) -  Contains the list of all the applicable taxes for the activity. This amount is not included in the `breakup/baseFare` field. However, this amount is already included in the `fare/totalFare` field.
+ fees (array [feesInfoOrderReq], fixed-type) - Contains the list of all the applicable fees for the activity. This amount is not included in the `breakup/baseFare` field. However, this amount is already included in the `fare/totalFare` field.
+ discounts (array [discountsInfoOrderReq], fixed-type) - Contains the list of all the applicable discounts for the activity. This amount is not included in the `breakup/baseFare` field. However, this amount is already included in the `fare/totalFare` field.
+ markups (array [markupsInfoOrderReq], fixed-type) - Contains the list of applicable markup one for the fare. This amount is not included in the `breakup/baseFare` field.

## purchaseOptionsOrderReq
+ purchaseOption (purchaseOptionInfoOrderReq) - Contains information about the different reward options that the customer can avail to pay for the activity booking. Note: If you do not provide this field, then the `purchaseOption` object is not returned in the API response.   

## purchaseOptionInfoOrderReq 
+ include totalPurchaseUnitsOrderReq 
+ include cashCurrencyOrderReq
+ include pointsCurrencyOrderReq
+ include rewardsOrderReq 

## totalPurchaseUnitsOrderReq
+ totalPurchaseUnits: `1` (number) - Total number of rewards that the customer can avail to pay for the activity booking. Note: If you do not provide this field, then the `totalPurchaseUnits` field value is set to `0`.   

## cashCurrencyOrderReq
+  cashCurrency: `USD` (string) - 3-character ISO code that indicates the currency in which the cash amount is returned in the `cash` field.   Note: If you do not provide this field, then the `cashCurrency` field is not returned in the API response.

## pointsCurrencyOrderReq
+ pointsCurrency: `Points` (string) - Indicates the currency that is associated with the loyalty program. For example, points and miles. Note that the `points` field value is represented by this currency. Note: If you do not provide this field, then the `pointsCurrency` field is not returned in the API response. 

## rewardsOrderReq 
+ rewards (array[rewardInfoOrderReq], fixed-type) - Contains the list of reward options that the customer can avail to make the activity booking. Note: If you do not provide this field, then the `rewards` array is returned as an empty array in the API response. 

## rewardInfoOrderReq
+ id: `1482|1` (string) -  Unique ID for the reward. Note: If you do not provide this field, then the `id` field is not returned in the API response. 
+ name: `Activity Reward` (string) - Name of the reward. Note: If you do not provide this field, then the `name` field is not returned in the API response. 
+ rank: `10` (string) - Rank assigned to the reward. This can be used to display the reward options on the User Interface (UI), based on the reward ranking. Note: If you do not provide this field, then the `rank` field is not returned in the API response.
+ type: `Variable_TieredVariable_LAPF_HybridFTP` (enum) - Type of reward. Note: If you do not provide this field, then the `type` field is not returned in the API response.
  + Dollars_Off_Incremental
  + Dollars_Off
  + FixedTicketPrice_TieredFTP
  + Purchase
  + Variable_TieredVariable_LAPF_HybridFTP
+ recommendation (recommendationInfoOrderReq) - Contains information about the recommended combination of cash and points that can used to pay for the booking. The recommendation is calculated based on the type of reward, customer's point balance, and the customer's eligibility information. Note: If you do not provide this field, then the `recommendation` object is not returned in the API response.
+ isEligible: true (boolean) - Indicates whether the customer is eligible to use this reward based on the customer's point balance. If the `isEligible` field returns `false`, this means that the customer is not eligible to use the reward. Note: If you do not provide this field, then the `isEligible` field is set to `false`.  
+ ruleSet (ruleSetInfoOrderReq) - Contains information about the rules based on which the `minimum` and `maximum` points that the customer can redeem is calculated. Note: If you do not provide this field, then the `ruleSet` object is not returned in the API response.
+ strikeoutValue (strikeoutValueInfoOrderReq) - Contains the pre-discounted fare for the activity in cash, points, or a combination of cash and points based on the type of reward. Note that this is a pre-discounted fare that appears striked-out to the customer on the User Interface (UI). Note: If you do not provide this field, then the `strikeoutValue` object is not returned in the API response.
+ actualValue (actualValueInfoOrderReq) - Contains the actual fare for the activity in cash, points, or a combination of cash and points based on the type of reward. Note: If you do not provide this field, then the `actualValue` object is not returned in the API response. 
+ stateBag (array [stateBagInfoOrderReq], fixed-type) - For internal use only. 

## recommendationInfoOrderReq
+ cash: `0.0` (number) - Recommended cash component of the actual fare that can be paid to book the activity. Note: If you do not provide this field, then the `cash` field value is set to `0`. Format: Decimal  
+ points: `1000.0` (number) - Recommended number of points that can be redeemed by the customer in the `pointsCurrency`. Note: If you do not provide this field, then the `points` field value is set to `0`. Format: Decimal
+ fee (feeRecommendationOrderReq) - Contains information about the applicable fee that the customer must pay when this reward option (rewards[]/id field) is used. Note: If you do not provide this field, then the `fee` object is not returned in the API response.
+ maxQuantity: `1` (number) - Maximum number of times that this reward can be used to make payment for the booking, based on the customer's point balance. Note: If you do not provide this field, then the `maxQuantity` field value is set to `0`.

## feeRecommendationOrderReq
+ cash: `0.0` (number) - Cash component of the fee amount. Note: If you do not provide this field, then the `cash` field value is set to `0`.  Format: Decimal  
+ points: `0.0` (number) - Points component of the fee amount in the `pointsCurrency`. Note: If you do not provide this field, then the `points` field value is set to `0`. Format: Decimal 
+ description: `fees` - Description of the fee. Note: If you do not provide this field, then the `description` field is not returned in the API response. 

## ruleSetInfoOrderReq
+ minimumPoints: `1000.0` (number) - Minimum points that the customer must redeem to use this reward option. Note: If you do not provide this field, then the `minimumPoints` field value is set to `0`. Format: Decimal
+ maximumPoints: `1000.0` (number) - Maximum points that the customer can redeem to use this reward option. Note: If you do not provide this field, then the `maximumPoints` field value is set to `0`. Format: Decimal
+ pointToCashFactor (pointToCashFactorInfoOrderReq) - Contains information about the conversion factor that is used to convert points to cash in case of a variable reward. Note: If you do not provide this field, then the `pointToCashFactor` object is not returned in the API response. 
+ cashRoundingOff: `0.0` (number) - Amount of cash that is deducted from the `displayFare/totalFare` and redeemed against the equivalent number of points from the customer’s point balance in case of dollar off reward and dollar off increemental reward. Note: If you do not provide this field, then the `cashRoundingOff` field value is set to `0`. Format: Decimal
+ pointStepSize: `1.0` (number) - Minimum quantity by which the customer can increase or decrease the number of points in case of a variable reward. Note: If you do not provide this field, then the `pointStepSize` field value is set to `0`. Format: Decimal
+ roundingType: `None` (enum) - Indicates the rounding type that is used for rounding the points value. Note: If you do not provide this field, then the `roundingType` field is not returned in the API response. 
  + Up
  + Down
  + Natural
  + None
             
## pointToCashFactorInfoOrderReq
+ value: `0.0100000` (number) - Indicates the conversion factor value that is used to calculate the cash equivalent in the `cashCurrency` for specific number of points. Consider a scenario where the `cashCurrency` is `USD` and you want to calculate the cash equivalent for `10000` points. If the conversion factor value is `0.01` and the `operator` is `Multiply`, then the cash equivalent for `10000` points will be `$100`. Note: If you do not provide this field, then the `value` field value is set to `0`. Format: Decimal
+ conversionOperator: `Multiply` (enum) - Arithmetic operator applied to calculate the points to cash conversion. Note: If you do not provide this field, then the `conversionOperator` field is not returned in the API response. 
  + Multiply
  + Divide
  + Subtract
  + Add

## strikeoutValueInfoOrderReq
+ cash: `0.0` (number) - Cash component of the pre-discounted fare amount. Note: If you do not provide this field, then the `cash` field value is set to `0`.  Format: Decimal
+ points: `0.0` (number) - Points component of the pre-discounted fare amount in the `pointsCurrency`. Note: If you do not provide this field, then the `points` field value is set to `0`. Format: Decimal

## actualValueInfoOrderReq
+ cash: `0.0` (number) - Cash component of the actual fare amount. Note: If you do not provide this field, then the `cash` field value is set to `0`. Format: Decimal
+ points: `1000.0` (number) - Points component of the actual fare amount in the `pointsCurrency`. Note: If you do not provide this field, then the `points` field value is set to `0`. Format: Decimal

## stateBagInfoOrderReq
+ key: `Discount` (string) - For internal use only.
+ value: 20.00 (number) - For internal use only. 

## cancellationPenaltiesOrderReq
+ cancellationPenalties (array [cancellationPenaltiesInfoOrderReq], fixed-type) - Contains the information about the list of applicable cancellation penalties, including information such as the window determining the penalty period and the penalties incurred for the cancellation. Note: If you do not provide this field, then the `cancellationPenalties` array is not returned in the API response. 

## cancellationPenaltiesInfoOrderReq
+ text: `Cancellations received within three (3) days of activity date will be subject to a supplier cancellation fee equal to the total activity cost. Theater tickets, theme-park passes, and select sightseeing tours are completely non-refundable once booked.  No shows are non-refundable.Please refer to the Terms and Conditions for more information.` - Textual description of the cancellation policy. Note: If you do not provide this field, then the `text` field is not returned in the API response. 
+ penalty (penaltyDetailsOrderReq) - Contains information related to the penalty, such as the start and end window and the penalty value. Note: If you do not provide this field, then the `penalty` object is not returned in the API response. 
+ window (windowInfoOrderReq) - Window during which the penalty is applicable. Note: If you do not provide this field, then the `window` object is not returned in the API response. 

## penaltyDetailsOrderReq
+ value: 100.0 (number) - If the cancellation is made within the given cancellation window, this field indicates the value of the penalty for the cancellation. For example, if this field returns `100` and the `valueType` field returns `Percent`, this means that a `100%` cancellation fee is applicable. Consider another scenario where the penalty of $100 is levied for the cancellation. In this case, the `value` field returns `100` and the `valueType` field returns `Fixed`. Note: If you do not provide this field, then the `value` field is set to `0`. Format: Decimal
+ valueType: `Percent` (enum) - Indicates the type of penalty value. The penalty can either be a fixed amount or a percentage of the total fare of the activity. For example, if the `value` field returns `100` and the `valueType` field returns `Percent`, this means that the cancellation penalty calculated is `100%` of the total fare. Consider another scenario where a penalty of $100 is levied for the cancellation. In this case, the `value` field returns `100` and the `valueType` field returns `Fixed`. This means that the cancellation penalty of `$100` is deducted from the total fare. Note: If you do not provide this field, then the `valueType` field is not returned in the API response. 
    + Fixed 
    + Percent
+ estimatedValue: `2.79` (number) - Approximate cancellation penalty amount calculated based on the value returned in the `value` and the `valueType` fields. For example, if the `valueType` field returns `Percent` and the `value` field returns `50`, then the estimateValue for cancellation penalty is calculated to be 50% of the total fare. Consider another scenario where the `value` field returns `100` and the `valueType` field returns `Fixed`, then the `estimatedValue` for cancellation penalty is `$100`. Note: If you do not provide this field, then the `estimatedValue` field value is set to `0`. Format: Decimal

## cancellationPolicyOptionsOrderReq
+ cancellationPolicy (penaltiesOrderReq) - Contains the information about the cancellation policy and the list of applicable cancellation penalties, including information such as the window determining the penalty period and the penalties incurred for the cancellation. Note: If you do not provide this field, then the `cancellationPolicy` object is not returned in the API response. 

## penaltiesOrderReq 
+ text: `Cancellations received within three (3) days of activity date will be subject to a supplier cancellation fee equal to the total activity cost. Theater tickets, theme-park passes, and select sightseeing tours are completely non-refundable once booked.  No shows are non-refundable.Please refer to the Terms and Conditions for more information.` - Textual description of the cancellation penalty. Note: If you do not provide this field, then the `text` field is not returned in the API response. 
+ penaltyRules (array [penaltyInfoOrderReq], fixed-type) - Contains the list of information related to the penalty, such as the start and end window and the penalty value. Note: If you do not provide this field, then the `penaltyRules` array is not returned in the API response. 

## penaltyInfoOrderReq
+ include penaltyDetailsOrderReq
+ window (windowInfoOrderReq) -  Window during which the penalty is applicable. Note: If you do not provide this field, then the `window` object is not returned in the API response. 

## windowInfoOrderReq
+ start: `2019-06-13T00:00:00` - Start date and time for the window. Note: If you do not provide this field, then the `date` field is set to `0001-01-01T00:00:00`. Format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS  
+ end: `2019-06-15T00:00:00` - End date and time for the window. Note: If you do not provide this field, then the `date` field is set to `0001-01-01T00:00:00`. Format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS  

## isImmediateRefundNeededOrderReq
+ isImmediateRefundNeeded: true (boolean) - Indicates whether refund must be processed immediately on cancellation or not. If `isImmediateRefundNeeded` is set to `true`, this means that refund must be processed immediately on cancellation. Note: If you do not provide this field, then the `isImmediateRefundNeeded` field is set to `false`.     

## bookingInfoOrderReq
+ bookingInfo (bookingInfoSummaryOrderReq) - Contains information about the booking details which includes the selected payment options, the traveler or passenger information, and the contact information of the person who is making the booking. Note: If you do not provide this field, then the `bookingInfo` object is not returned in the API response.     

## bookingInfoSummaryOrderReq
+ include passengersOrderReq
+ include bookingContactOrderReq
+ include selectedPaymentOptionsOrderReq
+ include specialRequestOrderReq
+ include questionAnswersOrderReq
+ include reportingFieldsBookingInfoOrderReq

## passengersOrderReq
+ passengers (array [passengerInfoOrderReq], required, fixed-type) - Contains the list of information of travelers for whom the customer wants to book the activity option.

## passengerInfoOrderReq
+ include passengerTypeOrderReq
+ include passengerNameOrderReq
+ include agePassengerOrderReq

## passengerTypeOrderReq
+ type: `Adult` (enum, required) - Type of traveler.
    + Adult
    + Child
    + Infant
    + Senior
    + Youth
    + Unknown

## passengerNameOrderReq
+ name (namePassengerOrderReq, required) - Contains information about the name of the traveler.

## namePassengerOrderReq
+ first: `John` (string, required) - First name.
+ last: `Doe` (string, required) - Last name.
+ middle: `Jerry` - Middle name.
+ title: `Mr` (enum) - Title before the name.
  + Mr
  + Madam
  + Master
  + Miss
  + Mrs
  + Ms
  + Mx
+ suffix: `Jr` - Suffix that follows the name.

## agePassengerOrderReq
+ age: 35 (number) - Age of traveler. The age must be provided for a child traveler. Note: If you do not provide this field, then the `age` field value is set to `0`.   

## bookingContactOrderReq
+ bookingContact (bookingContactInfoOrderReq, required) - Contains information about the name of the person who is making the booking.

## bookingContactInfoOrderReq
+ include nameBookContactOrderReq 
+ include ageBookingContactOrderReq 
+ include contactInfoBookContactOrderReq

## nameBookContactOrderReq  
+ name (nameBookingContactOrderReq, required) - Contains information about the name of the person who is making the booking.

## nameBookingContactOrderReq
+ first: `John` (string, required) - First name.
+ last: `Doe` (string, required) - Last name.
+ middle: `Jerry` - Middle name.
+ title: `Mr` (enum) - Title before the name.
  + Mr
  + Madam
  + Master
  + Miss
  + Mrs
  + Ms
  + Mx
+ suffix: `Jr` - Suffix that follows the name.

## ageBookingContactOrderReq 
+ age: 35 (number) - Age of the person who is making the booking.

## contactInfoBookContactOrderReq 
+ contactInfo (contactDetailsOrderReq) - Contains the contact information of the person who is making the booking. Note: If you do not provide this field, then the `contactInfo` object is not returned in the API response.

## contactDetailsOrderReq 
+ phone (phoneBookContactOrderReq) -  Contains the contact number of the person who is making the booking. Note: If you do not provide this field, then the `phone` object is not returned in the API response.
+ address (addressBookContactOrderReq ) - Contains information about the address of the person who is making the booking. Note: If you do not provide this field, then the `address` object is not returned in the API response.
+ email: `abc@xyz.com` (string) - Email address (recipient ID) that must be used when any email communication needs to be made with the person who is making the booking. Note: If you do not provide this field, then the `email` field is not returned in the API response. 

## phoneBookContactOrderReq 
+ type: `Work` (enum) - Type of phone number or contact number.
  + Fax
  + Home
  + Mobile
  + Work
  + Unknown
+ number: `555-0173` (string) - Phone number.
+ countryCode: `1` - Country code for the phone number.
+ ext: `123` - Extension number where the contact can be reached.
+ areaCode: 200 - Area code for the phone number.

## addressBookContactOrderReq 
+ line1: `3077 ACME Street` (string) - Street number and street name.
+ line2: `Landmark: Beside the ACME Shopping Mall` (string) - Additional information related to the address, such as landmark, apartment, suite, unit, and building information.
+ cityName: `San Francisco` (string) - Name of the city.
+ state (stateBookContactOrderReq) - Contains information about the state.  
+ countryCode: `US` (string) - 2-character ISO code of the country.  
+ postalCode: `94133` (string)- Postal code. In various countries, postal code is also known as postcode, post code, Eircode, PIN Code, or ZIP Code.

## stateBookContactOrderReq
+ code: `CA` (string) - 2-character state code.
+ name: `California` (string) - Name of the state.

## selectedPaymentOptionsOrderReq
+ selectedPaymentOptions (array[selectedPaymentOptionInfoOrderReq], required, fixed-type) - Contains the list of selected payment options that the customer wants to avail to pay for the activity. 
Notes: In case of activity bookings, you can only provide one payment option within the `/selectedPaymentOptions` array.  Either the amount in cash, points, or a combination of both the amount in cash and points must be provided within the `/selectedPaymentOptions` array.   

## selectedPaymentOptionInfoOrderReq
+ rewardId: `5256|5` (string, required) - Unique ID for the reward that is availed to pay for the activity.
+ cash (cashBookInfoOrderReq) - Contains information about the amount in cash that the customer must pay to book the activity. Note: If you do not provide this field, then the `cash` object is not returned in the API response.
+ points (pointsBookInfoOrderReq) -  Contains information about the number of points that the customer must redeem to book the activity. Note: If you do not provide this field, then the `points` object is not returned in the API response.

## cashBookInfoOrderReq
+ amount: 100.00 (number, required) - Cash component of the actual fare that the customer must pay to book the activity. Note: If you do not provide this field, then the `amount` field value is set to `0`. Format: Decimal
+ paymentMode: `Card` (enum, required) - Indicates the mode of payment for the `cash/amount`.
  + Cash
  + Card

## pointsBookInfoOrderReq
+ value: 2000 (number, required) - Number of points that the customer must redeem to book the activity. Note: If you do not provide this field, then the `value` field value is set to `0`. Format: Decimal
+ unit: `points` (string, required) - Indicates the currency that is associated with the loyalty program. For example, points and miles.

## specialRequestOrderReq
+ specialRequest: `Wheelchair assistance is needed at time of drop-off.` - Description of the special request. Note: If you do not provide this field, then the `specialRequest` field is not returned in the API response.  

## questionAnswersOrderReq
+ questionAnswers (array [questionAnsInfoOrderReq], fixed-type) - Contains the list of questions that are answered at the time of booking. 

## questionAnsInfoOrderReq 
+ questionId: 19 (string) - Unique ID for the question. 
+ answer: `Yes` (string) - Response to the question.

## reportingFieldsBookingInfoOrderReq
+ reportingFields (reportingFieldsBookingInfo) - Contains the fields that can be used for any business-related purposes, such as to pass the booking token for reporting purpose. 
Notes:
  + You can only pass up to ten custom fields.
  + If you do not provide this field, then the `reportingFields` field is not returned in the API response.

## reportingFieldsBookingInfo
+ field1: `Value1` - Indicates the value for field 1.  
+ field2: `Value2` - Indicates the value for field 2.
+ field3: `Value3` - Indicates the value for field 3.
+ field4: `Value4` - Indicates the value for field 4.
+ field5: `Value5` - Indicates the value for field 5.
+ field6: `Value6` - Indicates the value for field 6.
+ field7: `Value7` - Indicates the value for field 7.
+ field8: `Value8` - Indicates the value for field 8
+ field9: `Value9` - Indicates the value for field 9
+ field10: `Value10` - Indicates the value for field 10.

## paymentMethodsOrderReq
+ paymentMethods (array [paymentMethodDetailsOrderReq], fixed-type) - Contains the list of payment methods used to pay for the booking. We support payments made by cash and credit card.  Notes:  If the `/paymentMethods[]/type` field is set to `Card`, then you must provide the card details within the `/paymentMethods[]/card` object.  If the `/paymentMethods[]/type` field is set to `Cash`, then you must not provide the `/paymentMethods[]/card` object.  If you do not provide this field, then the `paymentMethods` array is not returned in the API response.  

## paymentMethodDetailsOrderReq
+ type: `Card` (enum, required) - Indicates the mode of payment. Notes:  If you set the `/paymentMethods[]/type` to `Card`, then you must provide the card details within the `/paymentMethods[]/card` object.  If you set the `/paymentMethods[]/type` to `Cash`, then the `/paymentMethods[]/card` object is optional.  
  + Card 
  + Cash
+ source: `Customer` (enum) - Indicates the source of payment. Note: If you do not provide this field, then the `source` field is not returned in the API response.
  + Customer 
  + Supplier
+ currency: `USD` - 3-character ISO code that indicates the currency in which the payment is made for the activity booking. Note: If you do not provide this field, then the `currency` field is not returned in the API response. 
+ card (cardInfoSupplierOrderReq) -  Contains information about the credit card that is used make the payment for the booking to the supplier. This credit card information is used to pay the `cash/amount` specified within the `selectedPaymentOptions` array. 
Notes: 
  + You must provide the `card` object, when the `/paymentMethods[]/type` field is set to `Card`.
  + If you do not provide this field, then the `card` object is not returned in the API response. 

## cardInfoSupplierOrderReq 
+ token: `skfwefh$@fkew0fwy32ryr$#8ffjn3` (string, required) - For internal use only.
+ number: `444433******1111` (string, required) - Credit card number used for the payment. Note that the credit card number must be at least 12 digits.
+ holderName: `John Doe` (string, required) - Name on the credit card that is used for the payment.
+ cvv: `123` (string, required) - Three or four-digit card verification value (CVV) or card security code (CSC). 
+ issuedBy: `AX` (enum, required) - Card issuer.  
  + VI
  + CA
  + AX
  + DS
  + TO 
  + DC
  + S
  + JC
  + BC
  + T
  + R 
  + E
+ expiry (expiryInfoOrderReq, required) - Contains the credit card expiration details. Note: The expiration date of the credit card must be later than or equal to the current month and of the current year.
+ contactInfo (cardcontactSupplierInfoOrderReq) - Contains the contact information for the cardholder. The contact information provided for the cardholder must be the same as the billing contact information that is on the record of the credit card issuing bank. Note: If you do not provide this field, then the `contactInfo` object is not returned in the API response. 

## expiryInfoOrderReq
+ month: 12 (number, required) -  Expiration month of the credit card. Note that the value of `month` must be between `1` and `12`.
+ year: 2023 (number, required) - Expiration year of the credit card.

## cardcontactSupplierInfoOrderReq
+ email: `abc@xyz.com` (string) - Email address (recipient ID) that must be used when any email communication needs to be made with the cardholder. Note: If you do not provide this field, then the `email` field is not returned in the API response.  
+ billingAddress (addressBookContactOrderReq) - Contains information about the billing address of the cardholder. Note: If you do not provide this field, then the `billingAddress` object is not returned in the API response. 
+ phone (phoneBookInfoOrderReq) - Contains the contact number of the cardholder. Note:If you do not provide this field, then the `phone` object is not returned in the API response. 

## phoneBookInfoOrderReq
+ type: `Work` (enum) - Type of phone number or contact number.
  + Fax
  + Home
  + Mobile
  + Work
  + Unknown
+ number: `555-0173` (string)  - Phone number.
+ countryCode: `1` - Country code for the phone number.

## confirmationDetailsOrderReq 
+ confirmationDetails (confirmationInfoOrderReq) - Contains the confirmation details of the activity booking. Note: If you do not provide this field, then the `confirmationDetails` object is not returned in the API response.

## confirmationInfoOrderReq 
+ bookingTimestamp: `{dateTime|YYYY-MM-DDTHH:mm:ssZ|0 0}` - Date and time when the activity booking is completed. Note: If you do not provide this field, then the `bookingTimestamp` field value is set to `0001-01-01T00:00:00Z`. Format: YYYY-MM-DDTHH:MM:SSZ  
+ include supplierConfirmationNumberOrderReq
+ include cancellationTokenOrderReq
+ alternateConfirmationDetails (array [alternateConfirmationInfo], fixed-type) - Contains the confirmation details of the activity booking from the supplier. Note: If you do not provide this field, then the `alternateConfirmationDetails` array is not returned in the API response.
+ errors (array [errorsOrderReq], fixed-type) - Contains the list of errors that occur during the booking process. For example, if the  booking fails, the `errors` array lists the appropriate error messages. Note: If you do not provide this field, then the `errors` array is not returned in the API response.
+ warnings (array [warningsOrderReq], fixed-type) - Contains the list of warnings that appear during the booking process. Note: If you do not provide this field, then the `warnings` array is not returned in the API response.

## supplierConfirmationNumberOrderReq
+ supplierConfirmationNumber: `309755104` (string, nullable) - Supplier confirmation number for the booking. Note: If you do not provide this field, then the `supplierConfirmationNumber` field is not returned in the API response.

## cancellationTokenOrderReq
+ cancellationToken: null (string, nullable) - Cancellation token received from the supplier that is required to cancel the activity booking. Note: If you do not provide this field, then the `cancellationToken` field is not returned in the API response.

## errorsOrderReq
+ code: `3434` - Code for the error.  
+ message: `Error: Could not process the request due to network connectivity issues. Please try again.` - Error message text.  

## warningsOrderReq
+ code: `4313` -  Code for the warning. 
+ message: `Warning: Due to heavy traffic, the processing might take longer than expected.` -  Warning message text.

## cancellationDetailsOrderReq
+ cancellationDetails (cancellationInfoOrderReq) -  Contains the cancellation details of the activity booking. Note: If you do not provide this field, then the `confirmationDetails` object is not returned in the API response.

## cancellationInfoOrderReq 
+ cancellationTimestamp: `{dateTime|YYYY-MM-DDTHH:mm:ssZ|0 0}` - Date and time when the activity booking is canceled. Note: If you do not provide this field, then the `cancellationTimestamp` field value is set to `0001-01-01T00:00:00Z`. Format: YYYY-MM-DDTHH:MM:SSZ    
+ include supplierCancellationNumberOrderReq
+ errors (array [errorsOrderReq], fixed-type) - Contains the list of errors that occur during the cancellation process. For example, if the  cancellation fails, the `errors` array lists the appropriate error messages. Note: If you do not provide this field, then the `errors` array is not returned in the API response.
+ warnings (array [warningsOrderReq], fixed-type) - Contains the list of warnings that appear during the cancellation process. Note: If you do not provide this field, then the `warnings` array is not returned in the API response.

## supplierCancellationNumberOrderReq
+ supplierCancellationNumber: `309755104` (string, nullable) - Supplier cancellation number for the booking. Note: If you do not provide this field, then the `supplierCancellationNumber` field is not returned in the API response.

## reportingFieldOrderReq
+ reportingFields (reportingFieldsInfoOrderReq) - Contains the reporting fields that can be used for any business-related purposes, such as to pass the booking token for reporting purpose. You can only pass up to ten fields. Note: If you do not provide this field, then the `reportingFields` object is not returned in the API response.

## reportingFieldsInfoOrderReq
+ field1: `fpkfm2212` - Indicates the value for field 1.  
+ field2: `Value2` - Indicates the value for field 2.
+ field3: `Value3` - Indicates the value for field 3.
+ field4: `Value4` - Indicates the value for field 4.
+ field5: `Value5` - Indicates the value for field 5.
+ field6: `Value6` - Indicates the value for field 6.
+ field7: `Value7` - Indicates the value for field 7.
+ field8: `Value8` - Indicates the value for field 8
+ field9: `Value9` - Indicates the value for field 9
+ field10: `Value10` - Indicates the value for field 10.

## customerOrderReq
+ customer (customerAdditionalInfo, required) - Contains information about the customer and the eligibility information of the customer for the loyalty program that the customer is associated with.

## customerAdditionalInfo
+ id: `autoUser` (string, required) -  Unique ID for the customer.
+ name (customerAdditionalInfoName, required) - Contains information about the name of the customer.
+ phone (phoneCustomerInfoOrderReq, required) - Contains the contact number of the customer.
+ alternatePhone (phoneCustomerInfoOrderReq) - Contains the alternate contact number of the customer.
+ address (addressCustomerOrderReq, required) - Contains information about the address of the customer.
+ include reportingFieldOrderReq
+ extensionData (customerAdditonalInfoExtensionData) - Contains custom fields that you can use to pass data that is required to call external services. For example, API consumers can use `extensionData` object to pass data that is required to call external services. This helps to extend the API functionality without the need to create new API versions. Notes:  You can only pass data in up to ten custom fields – `field1` to `field10`.  The data specified in the `extensionData` object is not stored in our database and is passed as is to the external services.  If you do not provide this field, then the `extensionData` object is not returned in the API response.     

## customerAdditionalInfoName
+ first: `John` (string, required) - First name.
+ last: `Doe` (string, required) - Last name.
+ middle: `Jerry` - Middle name.
+ title: `Mr` (enum) - Title before the name.
  + Mr
  + Madam
  + Master
  + Miss
  + Mrs
  + Ms
  + Mx
+ suffix: `Jr` - Suffix that follows the name.

## phoneCustomerInfoOrderReq
+ type: `Work` (enum) - Type of phone number or contact number.
  + Fax
  + Home
  + Mobile
  + Work
  + Unknown
+ number: `555-0173` (string, required)  - Phone number.
+ countryCode: `1` - Country code for the phone number.

## addressCustomerOrderReq
+ line1: `3077 ACME Street` (string, required) -  Street number and street name.
+ line2: `Landmark: Beside the ACME Shopping Mall` (string) - Additional information related to the address, such as landmark, apartment, suite, unit, and building information. 
+ cityName: `San Francisco` (string, required) - Name of the city.
+ state (stateCustomerInfoOrderReq, required) - Contains information about the state. Note: If the `countryCode` is set to `US`, `state` name is mandatory. For more information on US state codes, see the [state code list](http://pe.usps.com/text/pub28/28apb.htm). 
+ countryCode: `US` (string, required) - 2-character ISO code of the country.  
+ postalCode: `94133` (string, required) - Postal code. In various countries, postal code is also known as postcode, post code, Eircode, PIN Code, or ZIP Code.
 
## stateCustomerInfoOrderReq
+ name: `California` (string) - Name of the state. Note: If the `countryCode` is set to `US`, the `state` name is mandatory.
+ code: `CA` (string) - 2-character state code.

## customerAdditonalInfoExtensionData
+ field1: `value1` - Indicates the value for field1. 
+ field2: `value2` - Indicates the value for field2.
+ field3: `value3` - Indicates the value for field3. 
+ field4: `value4` - Indicates the value for field4. 
+ field5: `value5` - Indicates the value for field5.
+ field6: `value6` - Indicates the value for field6. 
+ field7: `value7` - Indicates the value for field7.
+ field8: `value8` - Indicates the value for field8. 
+ field9: `value9` - Indicates the value for field9. 
+ field10: `value10` - Indicates the value for field10.
